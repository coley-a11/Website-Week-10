library(tidyverse)
library("brms")
df %>%
bind_cols(as_tibble(fitted(m_vslopes_np))) %>%
group_by(Student) %>%
nest() %>%
sample_n(6) %>%
unnest() %>%
ggplot() +
geom_point(aes(x = Time, y = GPA), size = 4, alpha = .75, color = "dodgerblue2") +
geom_point(aes(x = Time, y = Estimate), shape = 1, size = 4, stroke = 1.5) +
labs(x = "Assessment Period",
y = "Reading Ability",
title = "Model 4: One Random Slope, One Covariate",
subtitle = "Blue points are observed values. Black circles are fitted values.") +
scale_x_continuous(expand = c(.075, .075), breaks = 0:3)
m_vslopes_np  <-
brm(
GPA ~ 1 + Time + (1 + Time | Student),
file = here::here("models", "multi-level-var-slopes-no-prior"),
data = df,
family = gaussian)
print(m_vslopes_np)
report::report(m_vslopes_np)
df %>%
bind_cols(as_tibble(fitted(m_vslopes_np))) %>%
group_by(Student) %>%
nest() %>%
sample_n(6) %>%
unnest() %>%
ggplot() +
geom_point(aes(x = Time, y = GPA), size = 4, alpha = .75, color = "dodgerblue2") +
geom_point(aes(x = Time, y = Estimate), shape = 1, size = 4, stroke = 1.5) +
labs(x = "Assessment Period",
y = "Reading Ability",
title = "Model 4: One Random Slope, One Covariate",
subtitle = "Blue points are observed values. Black circles are fitted values.") +
scale_x_continuous(expand = c(.075, .075), breaks = 0:3)
df %>%
bind_cols(as_tibble(fitted(m_vslopes_np))) %>%
ggplot() +
geom_line(aes(x = Time, y = Estimate, group = Student), size = .75, alpha = .30) +
geom_line(aes(x = Time, y = GPA, group = Student), size = .75, alpha = .15, color = "dodgerblue2") +
labs(x = "Assessment Period",
y = "Reading Ability",
title = "Model 4: One Random Slope, One Covariate",
subtitle = "Blue lines are observed values. Black lines are fitted.") +
theme_minimal(base_size = 16) +
theme(plot.title = element_text(hjust = .5))
rlang::last_error()
pr = prior(normal(0, 1), class = 'b')
m_vslopes_np  <-
brm(
GPA ~ 1 + Time + (1 + Time | Student),
file = here::here("models", "multi-level-var-slopes-no-prior"),
data = df,
prior = pr,
cores = 4,
family = gaussian)
summary(m_vslopes_np)
m_vslopes_np  <-
brm(
GPA ~ + Time + (1 + Time | Student),
file = here::here("models", "multi-level-var-slopes-no-prior"),
data = df,
prior = pr,
cores = 4)
summary(m_vslopes_np)
dfa <- GPA[,c(1,3,4,5,7)]
dfa <- GPA[,c(1,3,4,5,7)]
GPA <- rio::import("https://stats.idre.ucla.edu/wp-content/uploads/2016/02/gpa_ch5_hox.dat",
format ="csv")
dfa <- GPA[,c(1,3,4,5,7)]
names(dfa)[1] <- "Student"
names(dfa)[2] <- "GPA"
names(dfa)[3] <- "Hours.Worked"
names(dfa)[4] <- "Sex"
names(dfa)[5] <- "Time"
m_vslopes_np  <-
brm(
GPA ~ + Time + (1 + Time | Student),
file = here::here("models", "multi-level-var-slopes-no-prior"),
data = dfa,
prior = pr,
cores = 4)
summary(m_vslopes_np)
m_vslopes_np  <-
brm(
GPA ~ + Time + (1 + Time | Student),
data = dfa,
prior = pr,
cores = 4)
summary(m_vslopes_np)
m1  <-
brm(
GPA ~ + Time + (1 + Time | Student),
data = dfa,
prior = pr,
cores = 4)
pp_check(m1)
summary(m1)
sjPlot::tab_model(m1)
p1 <- brms::mcmc_plot(m_vslopes,
type = "areas",
prob = .89)
p1 <- brms::mcmc_plot(m1,
type = "areas",
prob = .89)
p1
summary(m1)
lmer(GPA ~ + Time + (1 + Time | Student))
lmer(dfa,GPA ~ + Time + (1 + Time | Student))
library("lme4")
lmer(dfa,GPA ~ + Time + (1 + Time | Student))
lmer(GPA ~ + Time + (1 + Time | Student), data = dfa)
summary(m1)
lmer(GPA ~ + Time + (1 + Time | Student), data = dfa)
gpa_lm = lm(GPA ~ Time, data = dfa)
gpa_lm
m2<-lmer(GPA ~ + Time + (1 + Time | Student), data = dfa)
summary(m2)
m2_coefs <- coef(m2)$Student %>%
rename(Intercept = `(Intercept)`, Slope = Time) %>%
rownames_to_column("Student")
m2_coefs
df_ran <- left_join(df, m2_coefs, by "Student")
df_ran <- left_join(df, m2_coefs, by = "Student")
m2_coefs <- coef(m2)$Student %>%
rename(Intercept = `(Intercept)`, Slope = Time) %>%
rownames_to_column("Student")
df_ran <- left_join(df, m2_coefs, by = "Student")
sjp.lmer(m2, y.offset = .4)
library("sjPlot")
sjp.lmer(m2, y.offset = .4)
sjp.lmer(m2, y.offset = .4)
library(sjPlot)
sjp.lmer(m2, y.offset = .4)
library("sjPlot")
sjp.lmer
devtools::install_github("sjPlot/sjmisc")
sjp.lmer(m2, y.offset = .4)
library(sjPlot)
sjp.lmer(m2, y.offset = .4)
library(sjmisc)
library(sjmisc)
sjp.lmer(m2, y.offset = .4)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library("brms")
library("lme4")
library("sjPlot")
devtools::install_github("sjPlot/sjmisc")
library(sjmisc)
library(sjmisc)
sjp.lmer(m2, y.offset = .4)
plot_model(m2, y.offset = .4)
plot_model(m2)
plot_model(m2, type = "rs.ri")
summary(m2)
GPA
dfa <- GPA[,c(1,2,3,4,5,7)]
names(dfa)[1] <- "Student"
names(dfa)[2] <- "Highschool GPA"
names(dfa)[3] <- "GPA"
names(dfa)[4] <- "Hours.Worked"
names(dfa)[5] <- "Sex"
names(dfa)[6] <- "Time"
dfa
names(dfa)[2] <- "Highschool.GPA"
ggplot(df, aes(x = Highschool.GPA, y = GPA, group = Student)) +
geom_line(alpha = 0.1, colour= "deeppink2")+
geom_point(alpha = 0.1, colour= "deeppink2")+
theme_minimal()
ggplot(dfa, aes(x = Highschool.GPA, y = GPA, group = Student)) +
geom_line(alpha = 0.1, colour= "deeppink2")+
geom_point(alpha = 0.1, colour= "deeppink2")+
theme_minimal()
ggplot(dfa, aes(x = Highschool.GPA, y = GPA)) +
geom_line(alpha = 0.1, colour= "deeppink2")+
geom_point(alpha = 0.1, colour= "deeppink2")+
theme_minimal()
dfa
ggplot(dfa, aes(x = Hours.Worked, y = GPA, group = Student)) +
geom_line(alpha = 0.1, colour= "deeppink2")+
geom_point(alpha = 0.1, colour= "deeppink2")+
theme_minimal()
m1 <- lmer(GPA ~ 1 + (1|Student), data = dfa, REML = FALSE) #different intercepts and slopes for students
# Effect of working will vary between students. Random intercepts for hours worked, and random slopes for Students, influenced by the amount of time they work
m2 <- lmer(GPA ~ 1 + (1 + Hours.Worked | Students), data = dfa, REML = FALSE)
m1 <- lmer(GPA ~ 1 + (1|Student), data = dfa, REML = FALSE) #different intercepts and slopes for students
# Effect of working will vary between students. Random intercepts for hours worked, and random slopes for Students, influenced by the amount of time they work
m2 <- lmer(GPA ~ 1 + (1 + Hours.Worked | Student), data = dfa, REML = FALSE)
# EAch student has their own intercept, random slopes influenced by both time and hours worked and their interaction.
m3 <- lmer(GPA ~ 1 + (1 + Hours.Worked * Time | Student), data = dfa, REML = FALSE)
snova (m1, m2, m3)
anova (m1, m2, m3)
anova (m1, m2)
snova (m2, m3)
anova (m2, m3)
anova (m1, m3)
anova (m2, m3)
# Effect of working will vary between students. Random intercepts for hours worked, and random slopes for Students, influenced by the amount of time they work
m2 <- lmer(GPA ~ 1 + (1 + Time | Student), data = dfa, REML = FALSE)
anova (m1, m2)
nm1 <- lmer(GPA ~ 1 + (1|Student), data = dfa, REML = FALSE) #different intercepts and slopes for students
# Effect of time will vary between students. Random intercepts for time, and random slopes for Students, influenced by time
nm2 <- lmer(GPA ~ 1 + (1 + Time | Student), data = dfa, REML = FALSE)
anova (nm1, nm2)
m1 <- kmer(GPA~ Time + (1 + Time | Student), data = dfa, REML = FALSE)
m1 <- lmer(GPA~ Time + (1 + Time | Student), data = dfa, REML = FALSE)
summary(m1)
m2 <- lmer(GPA ~ Time + Highschool.GPA + (1 + Time | Student), data = dfa, REML = FALSE)
summary(m2)
m1 <- lmer(GPA~ Time + (1 + HighschoolGPA + Time | Student), data = dfa, REML = FALSE)
m1 <- lmer(GPA~ Time + (1 + Highschool.GPA + Time | Student), data = dfa, REML = FALSE)
summary(m1)
summary(m1)
lm1 <- lm (GPA ~ Sex, data = dfa)
summary(lm1)
dfa$Sex <- as.factor(dfa$Sex)
lm1 <- lm (GPA ~ Sex, data = dfa)
summary(lm1)
dfa <- GPA[,c(1,3,4,5,7)]
lm1 <- lm (GPA ~ Sex, data = dfa)
names(dfa)[1] <- "Student"
names(dfa)[2] <- "GPA"
names(dfa)[3] <- "Hours.Worked"
names(dfa)[4] <- "Sex"
names(dfa)[5] <- "Time"
lm1 <- lm (GPA ~ Sex, data = dfa)
summary(lm1)
(plot1 <- ggplot(dfa, aes(x = Sex, y = GPA)) +
geom_point() +
geom_smooth(method = "lm"))
Sex
dfa$Sex
dfa <- GPA[,c(1,2,3,4,5,7)]
dfa
GPA
dfa <- GPA[,c(1,2,3,4,7,8)]
dfa
names(dfa)[6] <- "Sex"
names(dfa)[1] <- "Student"
names(dfa)[2] <- "Highschool.GPA"
names(dfa)[3] <- "GPA"
names(dfa)[4] <- "Hours.Worked"
names(dfa)[5] <- "Time"
names(dfa)[6] <- "Sex"
df <- GPA[,c(1,2,3,4,7,8)]
df
names(df)[1] <- "Student"
names(df)[2] <- "Highschool.GPA"
names(df)[3] <- "GPA"
names(df)[4] <- "Hours.Worked"
names(df)[5] <- "Time"
names(df)[6] <- "Sex"
lm1 <- lm (GPA ~ Sex, data = df)
summary(lm1)
(plot1 <- ggplot(dfa, aes(x = Sex, y = GPA)) +
geom_point() +
geom_smooth(method = "lm"))
m1 <- lmer(GPA ~ Sex + (1|Student), data = df)
summary(m1)
m2 <- lmer(GPA ~ Sex + (1|Student) + (1|Time))
m2 <- lmer(GPA ~ Sex + (1|Student) + (1|Time), data = df)
summary(m2)
m1 <- lmer(GPA ~ 1 + Time + (1 + Time| Student), data = df)
summary(m1)
sjPlot::tab_model(m1)
library(equatiomatic)
equatiomatic::extract_eq(m1)
p1 <- brms::mcmc_plot(m1,
type = "areas",
prob = .89)
geom_point()
geom_point()
ggplot(df, aes(x = Time, y = GPA))+
geom_point()
ggplot(df, aes(x = Time, y = GPA))+
geom_point()+
geom_abline()
ggplot(df, aes(x = Time, y = GPA))+
geom_point()+
geom_smooth()
ggplot(df, aes(x = Time, y = GPA))+
geom_point()+
geom_smooth(method="auto", se=TRUE, fullrange=FALSE, level=0.95)
ggplot(df, aes(x = Time, y = GPA))+
geom_point()+
stat_smooth()
GPA
df <- GPA[,c(1,2,3,4,7,8)]
names(df)[1] <- "Student"
names(df)[2] <- "Highschool.GPA"
names(df)[3] <- "GPA"
names(df)[4] <- "Hours.Worked"
names(df)[5] <- "Time"
names(df)[6] <- "Sex"
ggplot(df, aes(x = Time, y = GPA))+
geom_point()+
stat_smooth()
df$Time
str(df$Time)
ggplot(df, aes(x = Time, y = GPA))+
geom_point()
t0 <- df$Time == 0
t0
df %>%                                        # Specify data frame
group_by(Time) %>%                         # Specify group indicator
summarise_at(mean(GPA),              # Specify column
list(name = mean))
df <- GPA[,c(1,2,3,4,7,8)]
names(df)[1] <- "Student"
names(df)[2] <- "Highschool.GPA"
names(df)[3] <- "GPA"
names(df)[4] <- "Hours.Worked"
names(df)[5] <- "Time"
names(df)[6] <- "Sex"
d1 <- df %>%
group_by(Time) %>%
summarise(mean_GPA = mean(GPA, na.rm = TRUE),
sd_GPA = sd(HLTH.GPA, na.rm = TRUE))
d1 <- df %>%
group_by(Time) %>%
summarise(mean_GPA = mean(GPA, na.rm = TRUE),
sd_GPA = sd(GPA, na.rm = TRUE))
d1
# fixed effect is time (does more time in degree = higher GPA?)
# Random effects, students vary in terms of their starting GPA and their GPA over semesters
m1 <- lmer(GPA ~ 1 + Time + (1 + Time| Student), data = df, REML = FALSE)
summary(m1)
coef(m1)
VarCorr(m1)
ggplot(fortify(m1), aes(Time, GPA, group = Student))+
stat_summary(fun.data=mean_se, geom="pointrange") +
stat_summary(aes(y=.fitted), fun.y=mean, geom="line")
summary(m1)
# fixed effect is time (does more time in degree = higher GPA?)
# Random effects, students vary in terms of their starting GPA and their GPA over semesters
m1 <- lmer(GPA ~ 1 + Time + (1 + Time| Student), data = df)
summary(m1)
print(m1)
summary(m1)
print(m1)
ran_tot_var <- 0.045193 + 0.004504 + 0.042388
summary(m1)
ran_var_student <- 0.045193/ran_tot_var
ran_var_student
ran_var_time <- 0.004504/ran_tot_var
ran_var_time
ran_var_time *100
summary(m1)
m2 <- lmer(GPA ~ 1 + Time + Sex + (1 + Time| Student), data = df)
summary(m2)
library(equatiomatic)
equatiomatic::extract_eq(m1)
yhat <- fitted(m1)
summary(yhat)
install.packages("psycho")
results <- analyze (m1, CI = 95)
library(psycho)
results <- analyze (m1, CI = 95)
library(psycho)
results <- analyze (m1, CI = 95)
devtools::install_github("neuropsychology/psycho.R")
library(psycho)
results <- analyze (m1, CI = 95)
install.packages("report")
library(report)
results <- analyze (m1, CI = 95)
report::report(m1)
report(m1)
report(m1, ci = 0.95)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library("brms")
library("lme4")
library("sjPlot")
devtools::install_github("sjPlot/sjmisc")
install.packages("report")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library("brms")
library("lme4")
library("sjPlot")
devtools::install_github("sjPlot/sjmisc")
GPA <- rio::import("https://stats.idre.ucla.edu/wp-content/uploads/2016/02/gpa_ch5_hox.dat",
format ="csv")
GPA
df <- GPA[,c(1,2,3,4,7,8)]
names(df)[1] <- "Student"
names(df)[2] <- "Highschool.GPA"
names(df)[3] <- "GPA"
names(df)[4] <- "Hours.Worked"
names(df)[5] <- "Time"
names(df)[6] <- "Sex"
d1 <- df %>%
group_by(Time) %>%
summarise(mean_GPA = mean(GPA, na.rm = TRUE),
sd_GPA = sd(GPA, na.rm = TRUE))
d1
ggplot(df, aes(x = Time, y = GPA))+
geom_point()
df$Student <-as.factor(df$Student)
df$Time <-as.factor(df$Time)
str(df$Time)
ggplot(df, aes(x = Time, y = GPA))+
geom_point()
ggplot(df, aes(x = Time, y = GPA, group = Student)) +
geom_line(alpha = 0.1, colour= "deeppink2")+
geom_point(alpha = 0.1, colour= "deeppink2")+
theme_minimal()
library(report)
# fixed effect is time (does more time in degree = higher GPA?)
# Random effects, students vary in terms of their starting GPA and their GPA over semesters
m1 <- lmer(GPA ~ 1 + Time + (1 + Time| Student), data = df)
df <- GPA[,c(1,2,3,4,7,8)]
names(df)[1] <- "Student"
names(df)[2] <- "Highschool.GPA"
names(df)[3] <- "GPA"
names(df)[4] <- "Hours.Worked"
names(df)[5] <- "Time"
names(df)[6] <- "Sex"
summary(m1)
# fixed effect is time (does more time in degree = higher GPA?)
# Random effects, students vary in terms of their starting GPA and their GPA over semesters
m1 <- lmer(GPA ~ 1 + Time + (1 + Time| Student), data = df)
summary(m1)
report(m1, ci = 0.95)
library(psycho)
analyze (m1, CI = 0.95)
sjPlot::tab_model(m1,
show.re.var= TRUE,
pred.labels =c("(Intercept)", "Semester"),
dv.labels= "Effect of Semester on GPA")
sjp.lmer(m1)
library(sjPlot)
sjp.lmer(m1)
ggplot(df, aes(Time, GPA, col = Student)) +
geom_point(size = 3) + # change size and colour
labs(y = "Exam grades (0 to 100)", x = "Intelligence (IQ)") + # rename axes
scale_y_continuous(limits = c(0, 100), breaks = c(0, 20, 40, 60, 80, 100)) + # y axis limits/range (0, 100), break points
scale_x_continuous(limits = c(90, 130)) + # x axis limits/range
geom_smooth(method = 'lm', se = F) + # fit linear regression line
geom_smooth(method = 'lm', se = F, aes(group = 1))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library("brms")
library("lme4")
library("sjPlot")
library(report)
devtools::install_github("sjPlot/sjmisc")
d1
d1[,2]
d1[,1]
d1[,3]
means <- matrix(c(2.5935, 2.7155, 2.8100, 2.9180, 3.0190, 3.1340,
0.3117591, 0.3362665, 0.3537310, 0.3551148, 0.3581625, 0.3769009),ncol=2,byrow=TRUE)
means
means <- matrix(c(2.5935, 2.7155, 2.8100, 2.9180, 3.0190, 3.1340,
0.3117591, 0.3362665, 0.3537310, 0.3551148, 0.3581625, 0.3769009),ncol=2,byrow=FALSE)
means
colnames(means) <- c("Mean GPA", "SD")
rownames(means) <- c("Year One, Semester One","Year One, Semester Two",
"Year Two, Semester One","Year Two, Semester Two",
"Year Three, Semester One","Year Three, Semester Two")
means <- as.table(means)
means
colnames(means) <- c("Mean GPA", "SD")
rownames(means) <- c("Year 1, Semester One","Year 1, Semester Two",
"Year 2, Semester One","Year 2, Semester Two",
"Year 3, Semester One","Year 3, Semester Two")
means <- as.table(means)
means
rownames(means) <- c("Year 1, Semester 1","Year 1, Semester 2",
"Year 2, Semester 1","Year 2, Semester 2",
"Year 3, Semester 1","Year 3, Semester 2")
means <- as.table(means)
means
length(df$Student)
lm1 <- lm(GPA ~ Time, data = df)
sjPlot::plot_model(lm1)
equatiomatic::extract_eq(lm1)
equatiomatic::extract_eq(lm1, use_coefs = TRUE)
summary(lm1)
report::report(lm1)
sjPlot::tab_model(m1)
sjPlot::tab_model(m1,
show.re.var= TRUE,
pred.labels =c("(Intercept)", "Semester"),
dv.labels= "Effect of Semester on GPA")
ran_var_student <- ran_var_student * 100
m2 <- lmer(GPA ~ 1 + Time + Sex + HighschoolGPA + Hours.Worked (1 + Time| Student), data = df)
m2 <- lmer(GPA ~ 1 + Time + Sex + Highschool.GPA + Hours.Worked (1 + Time| Student), data = df)
m2 <- lmer(GPA ~ 1 + Time + Sex + Highschool.GPA + Hours.Worked + (1 + Time| Student), data = df)
summary(m2)
equatiomatic::extract_eq(m1)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library("brms")
library("lme4")
library("sjPlot")
library(report)
library(equatiomatic)
devtools::install_github("sjPlot/sjmisc")
#summary(m2)
report(m2, ci = 0.95)
anova(m1,m2)
per_home <-performance::compare_performance(m1,m2)
plot(per_home)
per_home <-performance::compare_performance(lm1,m1,m2)
plot(per_home)
